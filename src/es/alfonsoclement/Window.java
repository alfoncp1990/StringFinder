/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.alfonsoclement;

import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JTextArea;


/**

 @author Alfon
 */
public class Window extends javax.swing.JFrame implements FinishListener {

   /**
    Creates new form Window
    */
   
   File file;
   Thread thread;
   Date inicio;
   DefaultListModel <String> model;
   ArrayList <File> files;
   
   boolean isSettedPath;
   public Window() {
      initComponents();
      setBounds(0, 0, 600, 600);
      setLocationRelativeTo(null);
      this.startButton.setEnabled(false);
      this.stopButton.setEnabled(false);
      isSettedPath = false;
      loader.setVisible(false);
      btnOpenHidden.setVisible(false);
      
   }

   /**
    This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jButton1 = new javax.swing.JButton();
      txtFieldPath = new javax.swing.JTextField();
      startButton = new javax.swing.JButton();
      stringTextField = new javax.swing.JTextField();
      selectPathButton = new javax.swing.JButton();
      loader = new javax.swing.JLabel();
      jScrollPane2 = new javax.swing.JScrollPane();
      areaError = new javax.swing.JTextArea();
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      stopButton = new javax.swing.JButton();
      lbl_tiempoUsado = new javax.swing.JLabel();
      jScrollPane3 = new javax.swing.JScrollPane();
      listFiles = new javax.swing.JList<>();
      btnOpenHidden = new javax.swing.JButton();
      jMenuBar1 = new javax.swing.JMenuBar();
      jMenu1 = new javax.swing.JMenu();
      salirButton = new javax.swing.JMenuItem();

      jButton1.setText("jButton1");

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      getContentPane().setLayout(null);

      txtFieldPath.setEditable(false);
      txtFieldPath.setForeground(new java.awt.Color(153, 153, 153));
      txtFieldPath.setText("Choose path for starting search ...");
      txtFieldPath.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            txtFieldPathActionPerformed(evt);
         }
      });
      getContentPane().add(txtFieldPath);
      txtFieldPath.setBounds(10, 32, 470, 33);

      startButton.setText("GO");
      startButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            startButtonActionPerformed(evt);
         }
      });
      getContentPane().add(startButton);
      startButton.setBounds(500, 90, 70, 33);

      stringTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
      stringTextField.addKeyListener(new java.awt.event.KeyAdapter() {
         public void keyTyped(java.awt.event.KeyEvent evt) {
            stringTextFieldKeyTyped(evt);
         }
      });
      getContentPane().add(stringTextField);
      stringTextField.setBounds(10, 105, 470, 35);

      selectPathButton.setText("...");
      selectPathButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            selectPathButtonActionPerformed(evt);
         }
      });
      getContentPane().add(selectPathButton);
      selectPathButton.setBounds(499, 32, 70, 33);

      loader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ajax-loader.gif"))); // NOI18N
      getContentPane().add(loader);
      loader.setBounds(294, 152, 28, 16);

      areaError.setColumns(20);
      areaError.setRows(5);
      jScrollPane2.setViewportView(areaError);

      getContentPane().add(jScrollPane2);
      jScrollPane2.setBounds(10, 420, 560, 70);

      jLabel1.setText("Errors");
      getContentPane().add(jLabel1);
      jLabel1.setBounds(20, 400, 34, 14);

      jLabel2.setText("Results");
      getContentPane().add(jLabel2);
      jLabel2.setBounds(20, 160, 50, 14);

      stopButton.setBackground(new java.awt.Color(255, 102, 102));
      stopButton.setText("STOP");
      stopButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            stopButtonActionPerformed(evt);
         }
      });
      getContentPane().add(stopButton);
      stopButton.setBounds(500, 130, 70, 30);
      getContentPane().add(lbl_tiempoUsado);
      lbl_tiempoUsado.setBounds(330, 150, 130, 20);

      listFiles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
      jScrollPane3.setViewportView(listFiles);

      getContentPane().add(jScrollPane3);
      jScrollPane3.setBounds(10, 190, 560, 200);

      btnOpenHidden.setText("Hidden");
      btnOpenHidden.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnOpenHiddenActionPerformed(evt);
         }
      });
      getContentPane().add(btnOpenHidden);
      btnOpenHidden.setBounds(490, 390, 65, 23);

      jMenu1.setText("File");

      salirButton.setText("Exit");
      salirButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            salirButtonActionPerformed(evt);
         }
      });
      jMenu1.add(salirButton);

      jMenuBar1.add(jMenu1);

      setJMenuBar(jMenuBar1);

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void txtFieldPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldPathActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_txtFieldPathActionPerformed

   private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
      // TODO add your handling code here:
      System.exit(0);
   }//GEN-LAST:event_salirButtonActionPerformed

   private void stringTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stringTextFieldKeyTyped
      // TODO add your handling code here:
      
      if(evt.getKeyCode() == KeyEvent.VK_ENTER )
      {
         if (isSettedPath){
            startSearch();
         }
      }
      
      if(stringTextField.getText().toString().length() > 20 )
      {
         evt.consume();
      } 
      
      if(stringTextField.getText().toString().length() == 0)
      {
         startButton.setEnabled(false);
      }
      else
      {
         if (isSettedPath) startButton.setEnabled(true);
      }
      
      
      
      
   }//GEN-LAST:event_stringTextFieldKeyTyped

   private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
      // TODO add your handling code here:
      startSearch();
   }//GEN-LAST:event_startButtonActionPerformed

   private void selectPathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPathButtonActionPerformed
      // TODO add your handling code here:
      JFileChooser jf = new JFileChooser(file != null ? file.getParent() : "");
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int choosen = jf.showDialog(null, null);
        if (choosen == JFileChooser.APPROVE_OPTION) {
            file = jf.getSelectedFile();
            txtFieldPath.setText(file.getAbsolutePath());
            isSettedPath = true;
        }
   }//GEN-LAST:event_selectPathButtonActionPerformed

   private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
      thread.interrupt();
      onFinish(new Date());
   }//GEN-LAST:event_stopButtonActionPerformed

   private void btnOpenHiddenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenHiddenActionPerformed
      
   }//GEN-LAST:event_btnOpenHiddenActionPerformed
   
   
   private void startSearch(){
      selectPathButton.setEnabled(false);
      startButton.setEnabled(false);
      stopButton.setEnabled(true);
      loader.setVisible(true);
      
      inicio = new Date();
      files = new ArrayList<>();
      listFiles.addMouseListener(null);
      model = new DefaultListModel<>();
      listFiles.removeAll();
      
      thread = new Thread(new Procesador(file, listFiles, model, files, areaError, stringTextField.getText(),this));
      thread.start();
      
   }
   
   @Override
   public void onFinish(Date date) {
      loader.setVisible(false);
      startButton.setEnabled(true);
      stopButton.setEnabled(false);
      selectPathButton.setEnabled(true);
      if(model.isEmpty())
      {
         model.addElement("There are not matches.");
      }
      
      lbl_tiempoUsado.setText("Finish: "+diferenciaEnSegundos(date, inicio)+ " seconds.");
      
      listFiles.addMouseListener(new MouseAdapter() {
         
            public void mouseClicked(MouseEvent evt) {
                JList list = (JList) evt.getSource();
                if (evt.getClickCount() == 2) {

                    // Double-click detected
                    int index = list.locationToIndex(evt.getPoint());
                    try {
                        // TODO add your handling code here:
                        File file = new File(files.get(index).getAbsolutePath());
                        Desktop desktop = Desktop.getDesktop();
                        desktop.open(file);
                     }catch (IOException ex) {
                        areaError.append(ex.getMessage());
                     }
                }
            }
      });
   }
   
   public static long diferenciaEnSegundos(Date fechaMayor, Date fechaMenor) {
      long diferenciaEnms = fechaMayor.getTime() - fechaMenor.getTime(); 
      long segundos = diferenciaEnms / (1000);
      return segundos;
   }
   
   /**
    @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      }catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            Window vent = new Window();
            vent.setVisible(true);
            vent.setTitle("String finder by Alfonso Clement");
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JTextArea areaError;
   private javax.swing.JButton btnOpenHidden;
   private javax.swing.JButton jButton1;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JMenu jMenu1;
   private javax.swing.JMenuBar jMenuBar1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JScrollPane jScrollPane3;
   private javax.swing.JLabel lbl_tiempoUsado;
   private javax.swing.JList<String> listFiles;
   private javax.swing.JLabel loader;
   private javax.swing.JMenuItem salirButton;
   private javax.swing.JButton selectPathButton;
   private javax.swing.JButton startButton;
   private javax.swing.JButton stopButton;
   private javax.swing.JTextField stringTextField;
   private javax.swing.JTextField txtFieldPath;
   // End of variables declaration//GEN-END:variables

  
}
